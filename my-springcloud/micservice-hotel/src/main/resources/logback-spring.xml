<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <springProperty scope="context" name="app_name" source="spring.application.name"/>

    <contextName>${app_name}</contextName>

    <timestamp key="bySecond" datePattern="yyyyMMdd'T'HHmmss"/>

    <property name="log_path" value="${user.dir}/log"/>

    <property name="pattern-file" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"/>
    <property name="pattern-console" value="%green(%d{yyyy-MM-dd HH:mm:ss.SSS}) [%thread] %highlight(%-5level) %red(%logger{50}) - %yellow(%msg) %n"/>

    <!--输出到控制台-->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>${pattern-console}</Pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 时间滚动输出日志 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log_path}/${app_name}.log</file>
        <append>true</append>
        <encoder>
            <pattern>${pattern-file}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${log_path}/info/${app_name}-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxFileSize>1MB</maxFileSize>
            <maxHistory>10</maxHistory>
            <totalSizeCap>10MB</totalSizeCap>
        </rollingPolicy>
    </appender>

    <!-- logger 用于对单个包或类添加配置 -->
    <!-- name 可以是包名或者类名 -->
    <!-- level 设置日志输出的级别 -->a
    <!-- logger 的 appender 根据参数 additivity 决定是否向上级logger传递打印信息。-->
    <!-- logger 的级别是其自身定义的级别，和 root 的级别没什么关系。 -->
    <logger name="com.example" level="info" additivity="false">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="FILE"/>
    </logger>

    <!-- 打印 mybatisplus sql -->
    <logger name="com.example.mybatisplus.mapper" level="debug"/>

    <logger name="org.springframework" level="info"/>
<!--    <logger name="java.sql.Connection" level="debug"/>-->
<!--    <logger name="java.sql.Statement" level="debug"/>-->
<!--    <logger name="java.sql.PreparedStatement" level="debug"/>-->

    <!-- root配置必须在appender下边 -->
    <!-- root节点是对所有appender的管理，添加哪个appender就会打印哪个appender的日志。root节点实际上是配置启用哪种appender，可以添加多个appender。 -->
    <!-- root节点的level是总的日志级别控制，如果appender的日志级别设定比root的高,会按照appender的日志级别打印日志 -->
    <!-- 如果appender的日志级别比root的低，会按照root设定的日志级别进行打印日志 -->
    <!-- 也就是说root设定的日志级别是最低限制,如果root设定级别为最高ERROR，那么所有appender只能打印最高级别的日志 -->
    <root level="info">
        <appender-ref ref="FILE"/>
        <appender-ref ref="CONSOLE"/>

    </root>

</configuration>
